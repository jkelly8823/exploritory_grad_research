VULNERABLE: YES
VULNERABLE_LINES: 1
VULNERABILITY_DESCRIPTION:
Assignment of sensitive information in a conditional statement.

EXPLANATION:
The code snippet contains a vulnerability where the assignment of the variable `cert` is being made within a conditional statement. The conditional statement is evaluating the return value of `SSL_get_peer_certificate(ssl)` and assigning it to `cert` at the same time. This can lead to confusion and make the code harder to understand.

However, the more severe vulnerability here is that this line is using the assignment operator (=) instead of the equality operator (==) or identity operator (===) for conditionals. This means that the code inside the conditional block will execute as long as the assignment is successful, not based on the equality of two values. In this specific case, the code is not currently vulnerable to exploits, but it could have been if the nature of the call to `SSL_get_peer_certificate(ssl)` were to change.

A secure and easier-to-understand method is to assign the value before the conditional statement and then evaluate the result inside the statement.

RECOMMENDATIONS:
To fix this vulnerability, we can restructure the conditional statement to make the assignment before the evaluation. Here's the recommended fix:
```c
cert = SSL_get_peer_certificate(ssl);
if (cert) {
    // code to be executed if certificate is obtained
}
```

ORIGINAL CODE:
```c
if (cert = SSL_get_peer_certificate(ssl)) {
    // got certificate, host can be trusted
    // ...
}
```