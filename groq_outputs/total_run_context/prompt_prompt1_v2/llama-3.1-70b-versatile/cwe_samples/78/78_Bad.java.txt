VULNERABLE: YES
VULNERABLE_LINES: 1
VULNERABILITY_DESCRIPTION:
The provided code is vulnerable to a Command Injection attack.

EXPLANATION:
The vulnerability arises from executing a script fetched from a system property directly using `System.exec()`. This can be exploited by an attacker who controls the system property "SCRIPTNAME" to inject malicious commands, possibly leading to code execution, privilege escalation, or data breaches.

RECOMMENDATIONS:
To fix this vulnerability, consider the following:

1. Sanitize and validate the input: Before passing the script name to `System.exec()`, validate that it conforms to expected input patterns and does not contain malicious characters.

2. Use a secure way to execute commands: Instead of directly executing a command using `System.exec()`, consider using a library or framework that provides more secure ways of executing commands.

3. Do not trust user-supplied input: Avoid using system properties or environment variables that can be controlled by an attacker.

Here's a simplified example of how to fix the vulnerability using Java's `ProcessBuilder` class with input validation:

```java
String script = System.getProperty("SCRIPTNAME");
// Assume a set of valid script names
if (isValidScriptName(script)) {
    ProcessBuilder processBuilder = new ProcessBuilder(script);
    try {
        processBuilder.start();
    } catch (IOException e) {
        // Handle exception
    }
} else {
    // Handle invalid input
}
```

ORIGINAL CODE:
```
String script = System.getProperty("SCRIPTNAME");if (script != null)System.exec(script);
```