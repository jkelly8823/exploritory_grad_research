VULNERABLE: YES
VULNERABLE_LINES: 5-10
VULNERABILITY_DESCRIPTION:
Potential Arbitrary File Access Vulnerability due to lack of input validation and sanitation on the $filename variable.

EXPLANATION:
This vulnerability could allow an attacker to specify an arbitrary file on the system and potentially access sensitive information, since the function uses the file_get_contents() function with user-provided input ($filename). 

The isOwnerOf() function, which checks ownership, does nothing to mitigate this vulnerability, as the file_get_contents() function is called with the potentially malicious filename before the isOwnerOf() function is executed. 

Furthermore, there is an issue with line 5. There is no input validation on $filename, and it can be exploited to read sensitive files and potentially even execute malicious scripts depending on the server setup. It can lead to unauthorized access, data leaks, or even Remote Code Execution (RCE).

RECOMMENDATIONS:
To fix this vulnerability, you should:
1. Implement a robust validation mechanism on the $filename, to ensure that it does not allow file access outside of the intended directory. You can use the realpath() function to get the canonical path of the file, which would prevent directory traversal attacks.
2. Use a whitelisting approach to ensure that the file is within a specific directory or list of allowed files. This can be achieved by storing a list of allowed file names and paths in an array, and comparing the $filename to that list before proceeding.
3. It is also recommended to use PHP's capabilities for safe file handling, such as using try/catch blocks, checking for file existence and accessibility, and handling potential exceptions.
4. Consider adding further error checking to handle scenarios where $filename might be null, empty string or not a string.

ORIGINAL CODE:

function printFile($username,$filename){
    //read file into string
    $file = file_get_contents($filename);if ($file && isOwnerOf($username,$filename)){echo $file;return true;}else{echo 'You are not authorized to view this file';}return false;
}