VULNERABLE: YES
VULNERABLE_LINES: 7
VULNERABILITY_DESCRIPTION:
The code is vulnerable to a "Directory Traversal" vulnerability, which is a type of Path Traversal vulnerability (CWE-23).

EXPLANATION:
The vulnerability occurs on line 7, `os.mkdir('/home/' + username)`, where the `username` variable is concatenated to a path without proper sanitization or validation. If an attacker were able to supply a specially crafted `username`, they could potentially traverse directories or create directories in unintended locations.

In this specific case, the vulnerability is mitigated slightly by the preceding check against `invalidUsername()`, which is hinted to avoid CWE-22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) and CWE-78 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')). However, it is unclear what exactly the `invalidUsername()` function is checking for, and it is therefore still possible for this vulnerability to exist.

RECOMMENDATIONS:
1. Implement a more comprehensive validation of the `username` variable, ensuring it meets the requirements for a valid username and that it is properly sanitized.
2. Use the `os.path.join()` function to safely construct file paths, rather than concatenating strings directly.
3. Consider using an absolute path that is specific to the intended directory, rather than assuming '/home/' as the base directory.
4. Ensure that the `invalidUsername()` function is properly implemented and able to catch any malicious input.

ORIGINAL CODE:
```python
def makeNewUserDir(username):
    if invalidUsername(username):
        # avoid CWE-22 and CWE-78
        print('Usernames cannot contain invalid characters')
        return False
    try:
        raisePrivileges()
        os.mkdir('/home/' + username)
        lowerPrivileges()
    except OSError:
        print('Unable to create new user directory for user:' + username)
        return False
    return True
```