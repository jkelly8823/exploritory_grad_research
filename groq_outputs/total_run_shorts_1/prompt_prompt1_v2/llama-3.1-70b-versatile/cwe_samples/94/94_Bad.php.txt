VULNERABLE: YES
VULNERABLE_LINES: 2-12
VULNERABILITY_DESCRIPTION: 
This code is vulnerable to both Stored Cross-Site Scripting (XSS) and Local File Inclusion (LFI) attacks due to the direct use of unvalidated user input from $_GET requests. 

EXPLANATION:
This vulnerability arises from the code's failure to properly validate and sanitize the user input from $_GET requests before writing it to a file and including it in the response. Specifically, the variables $name and $message are directly concatenated into the string that is written to the file messages.out. This allows an attacker to inject malicious code, such as JavaScript, which would be executed whenever the included file is accessed. Furthermore, the code includes the file messages.out, which may allow an attacker to include other malicious files if they can manipulate the $MessageFile variable.

Additionally, there is a risk of a Local File Inclusion vulnerability when the code includes the file specified in $MessageFile without properly validating the value. If an attacker can manipulate this variable to a path under their control, they may be able to include sensitive files on the server, potentially leading to information disclosure or even code execution.

RECOMMENDATIONS:
1.  Always validate and sanitize user input from $_GET requests before using it.
2.  Use prepared statements or parameterized queries if writing user input to files.
3.  Avoid including user-controlled files or paths to prevent Local File Inclusion attacks.
4.  Use a templating engine or HTML encoding to prevent Cross-Site Scripting attacks.

ORIGINAL CODE:
```php
$MessageFile = "messages.out";
if ($_GET["action"] == "NewMessage") {
    $name = $_GET["name"];
    $message = $_GET["message"];
    $handle = fopen($MessageFile, "a+");
    fwrite($handle, "<b>$name</b> says '$message'<hr>\n");
    fclose($handle);
    echo "Message Saved!<p>\n";
}else if ($_GET["action"] == "ViewMessages") {
    include($MessageFile);
}
```