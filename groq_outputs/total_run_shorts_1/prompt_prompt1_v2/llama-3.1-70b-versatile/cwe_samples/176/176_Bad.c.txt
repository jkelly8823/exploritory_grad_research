VULNERABLE: YES
VULNERABLE_LINES: 3
VULNERABILITY_DESCRIPTION:
The function NetUserGetInfo is used with a vulnerable information level (2), which may lead to a buffer overflow vulnerability.

EXPLANATION:
The NetUserGetInfo function retrieves information about a user on the local computer or an Active Directory domain. However, passing a level of 2 (_USER_INFO_2) and then passing a pointer to the struct _USER_INFO_2 as the buffer (info) can lead to a buffer overflow vulnerability. The _USER_INFO_2 structure contains fixed-length buffers (CHAR arrays) which can be exceeded by the information returned from the NetUserGetInfo call. This may cause the program to write beyond the allocated memory for the buffer, potentially resulting in arbitrary code execution.

RECOMMENDATIONS:
To fix the vulnerability, the buffer should be large enough to hold the returned data, and error checking should be performed to ensure the function call was successful and that the data was returned in the expected format. Consider using safer information levels or struct versions that better support dynamic information sizes, such as _USER_INFO_100, which contains dynamically sized strings and arrays that can be easily checked and validated.

ORIGINAL CODE:
void getUserInfo(char *username, struct _USER_INFO_2 info){
    WCHAR unicodeUser[UNLEN+1];
    MultiByteToWideChar(CP_ACP, 0, username, -1, unicodeUser, sizeof(unicodeUser));
    NetUserGetInfo(NULL, unicodeUser, 2, (LPBYTE *)&info);
}