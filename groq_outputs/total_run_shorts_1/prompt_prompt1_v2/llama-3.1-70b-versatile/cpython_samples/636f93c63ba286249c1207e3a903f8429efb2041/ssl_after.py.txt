VULNERABLE: NO
VULNERABLE_LINES: None
VULNERABILITY_DESCRIPTION: No vulnerabilities found.
EXPLANATION:
This function appears to be part of a domain name validation process for SSL certificates. It takes a domain name string and splits it into fragments. Each fragment is then inspected to ensure it does not contain more than one wildcard character. If more than one wildcard is found, a CertificateError is raised.

The function uses a safe approach by tracking the count of wildcard characters in each fragment and rejecting domain names that exceed the allowed limit. This limits the potential for denial-of-service attacks by preventing excessive wildcard patterns.

There are no obvious vulnerabilities in this code snippet.
RECOMMENDATIONS: None required.
ORIGINAL CODE:
```python
pass

def _dnsname_to_pat(dn, max_wildcards=1):
    pats = []
    for frag in dn.split(r'.'):
        if frag.count('*') > max_wildcards:
            # Issue #17980: avoid denials of service by refusing more
            # than one wildcard per fragment.  A survery of established
            # policy among SSL implementations showed it to be a
            # reasonable choice.
            raise CertificateError(
                "too many wildcards in certificate DNS name: " + repr(dn))
        if frag == '*':
            # When '*' is a fragment by itself, it matches a non-empty dotless
            # fragment.
            pats.append('[^.]+')
```