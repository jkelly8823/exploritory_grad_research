VULNERABLE: YES
VULNERABLE_LINES: 5-10, 15-20
VULNERABILITY_DESCRIPTION:
Duplicate code and potential enumeration consistency.

EXPLANATION:
The provided code snippet contains duplicate logic for determining the `page_size`. It checks the same conditions twice and assigns the same values to `page_size`. This duplication not only makes the code less maintainable but also introduces the possibility of inconsistencies if one of the blocks is updated and the other is not.

Additionally, the snippet declares `page_size` twice, which may cause compiler warnings or errors.

RECOMMENDATIONS:
To address the vulnerability, the duplicate logic should be removed, and the `page_size` variable should be declared only once. Here's an example of how to modify the code:

```c
u64 hdr;
enum irdma_page_size page_size;

if (info->page_size == 0x40000000)
    page_size = IRDMA_PAGE_SIZE_1G;
else if (info->page_size == 0x200000)
    page_size = IRDMA_PAGE_SIZE_2M;

u8 addr_type;
```

Note: It is assumed that `info` is an object with a `page_size` member variable and that `IRDMA_PAGE_SIZE_1G` and `IRDMA_PAGE_SIZE_2M` are defined enum values.

ORIGINAL CODE:
```c
u64 hdr;
enum irdma_page_size page_size;

if (info->page_size == 0x40000000)
    page_size = IRDMA_PAGE_SIZE_1G;
else if (info->page_size == 0x200000)
    page_size = IRDMA_PAGE_SIZE_2M;
u8 addr_type;
enum irdma_page_size page_size;

if (info->page_size == 0x40000000)
    page_size = IRDMA_PAGE_SIZE_1G;
else if (info->page_size == 0x200000)
    page_size = IRDMA_PAGE_SIZE_2M;
```