VULNERABLE: YES
VULNERABLE_LINES: 7
VULNERABILITY_DESCRIPTION:
Command Injection Vulnerability

EXPLANATION:
The code is vulnerable to command injection because it directly uses user-input data ($uri) in the construction of the request parameters. An attacker could manipulate the $uri variable to inject malicious commands. The 'SCRIPT_FILENAME' and 'SCRIPT_NAME' parameters are particularly concerning, as they could be used to execute arbitrary code.

The vulnerability arises from the lack of proper sanitization and validation of the input data. The code assumes that $uri is a safe value, but it does not perform any input validation or sanitization to ensure that it is not a malicious value.

RECOMMENDATIONS:
To fix this vulnerability, input validation and sanitization should be performed on the $uri variable to ensure that it does not contain any malicious values. Some recommended fixes include:

1. Using a whitelist of allowed values for the $uri variable.
2. Performing regular expression validation on the $uri variable to ensure that it only contains valid characters.
3. Using urlencoding or urldecoding functions to ensure that the $uri variable is properly encoded and decoded.

Additionally, the use of prepared statements or parameterized queries could help to prevent the injection of malicious data.

ORIGINAL CODE:
	}
} /* }}} */

function run_request($host, $port, $uri='/ping', $query='') { /* {{{ */
	require_once 'fcgi.inc';
	$client = new Adoy\FastCGI\Client($host, $port);
	$params = array(
		'GATEWAY_INTERFACE' => 'FastCGI/1.0',
		'REQUEST_METHOD'    => 'GET',
		'SCRIPT_FILENAME'   => $uri,
		'SCRIPT_NAME'       => $uri,
		'SERVER_PROTOCOL'   => 'HTTP/1.1',
		'CONTENT_TYPE'      => '',
		'CONTENT_LENGTH'    => 0
	);
	return $client->request($params, false)."\n";
}
/* }}} */