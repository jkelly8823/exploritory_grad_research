VULNERABLE: YES
VULNERABLE_LINES: 1-5
VULNERABILITY_DESCRIPTION:
This code is vulnerable to MySQL injection attacks and exposes sensitive user information.

EXPLANATION:
The provided code is vulnerable to MySQL injection attacks because it does not validate or sanitize user input. Although there is no explicit user input in this example, it is still using a deprecated MySQL API. The mysql_query() and mysql_fetch_assoc() functions are deprecated as of PHP 5.5 and removed in PHP 7.0.

Moreover, the code does not handle potential errors in a secure manner. If the query execution fails, the application will terminate with a generic error message, potentially revealing information about the system or database setup.

Lastly, printing a list of users to the page might pose a security risk if the list includes sensitive information or if an attacker can manipulate the content displayed on the page.

RECOMMENDATIONS:

-   **Upgrade the MySQL API**: Update your code to use PHP's improved MySQL APIs: MySQLi or PDO.
-   **Validate and Sanitize User Input**: Ensure that any user input is validated and sanitized to prevent SQL injection attacks.
-   **Proper Error Handling**: Handle potential errors in a secure manner, such as displaying a generic error message to the user while logging more detailed information for the system administrator.
-   **Protect Sensitive Information**: Only display information that is necessary for the user to see. Mask or encrypt sensitive data when possible.

ORIGINAL CODE:


                  $query = 'Select * From users Where loggedIn=true';
                  $results = mysql_query($query);
                     if (!$results) {exit;}
                     
                     //Print list of users to page
                     echo '<div id="userlist">Currently Active Users:';
                     while ($row = mysql_fetch_assoc($results)) {
                         echo '<div class="userNames">'.$row['fullname'].'</div>';
                     }
                     echo '</div>';