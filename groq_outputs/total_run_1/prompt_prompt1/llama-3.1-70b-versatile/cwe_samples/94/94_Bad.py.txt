VULNERABLE: YES
VULNERABLE_LINES: 8
VULNERABILITY_DESCRIPTION:
The code is vulnerable to arbitrary code execution through the eval() function. This function parses the expression passed and executes the code within.

EXPLANATION:
The eval() function in Python is a powerful tool for parsing and executing string expressions as Python code. However, this comes with a significant security risk. When executed with user-supplied input, as in this case, it allows an attacker to inject and execute arbitrary Python code. An attacker could exploit this vulnerability to extract sensitive information, disrupt the application, or cause significant damage to the system.

RECOMMENDATIONS:
Instead of using eval(), consider using safer alternatives to parse the input. For example, you can use a try-except block to convert the input to integers or floats. Here is an example of how you can modify the code to fix this vulnerability:

```
def main():
    sum = 0
    try:
        numbers = [float(i) for i in input("Enter a space-separated list of numbers: ").split()]
        for num in numbers:
            sum += num
        print(f"Sum of {numbers} = {sum}")
    except ValueError:
        print("Invalid input. Please enter a space-separated list of numbers.")

main()
```
ORIGINAL CODE:
```
def main():
    sum = 0
    numbers = eval(input("Enter a space-separated list of numbers: "))
    for num in numbers:
        sum = sum + num
    print(f"Sum of {numbers} = {sum}")
main()
```