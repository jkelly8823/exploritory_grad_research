VULNERABLE: YES
VULNERABLE_LINES: 3
VULNERABILITY_DESCRIPTION:
The code is vulnerable to a Directory Traversal attack. This is caused by unsanitized user input used in file path construction.

EXPLANATION:
The vulnerability arises from the use of the `$lang` variable in the `include` statement. This variable is populated directly from `$_GET['lang']`, which allows an attacker to inject any path that starts with a letter or number. The `preg_match` function only checks if the input string contains at least one alphanumeric character, but it does not validate whether the input string contains relative path notations like `../` or `./`. This means that an attacker can exploit this vulnerability by manipulating the `$lang` variable to traverse the directory structure.

For example, if an attacker were to submit the value `../../../../etc/passwd`, they might be able to access sensitive information about the system's user accounts.

RECOMMENDATIONS:
To fix this vulnerability, you should ensure that user-provided input used in file path construction is sanitized and validated properly. Some possible fixes include:
1. Validate the `$lang` variable against a whitelist of permitted values. This way, you can ensure that only approved values can be passed to the `include` statement.
2. Use a more restrictive regular expression to validate the input string, such as `/^[a-z0-9]+$/` to ensure that the input string only contains alphanumeric characters.
3. Use the `basename` function to remove any directory path components from the user input string, ensuring that only a simple filename can be provided.
4. User-safe values such as constants or a mapping of language codes to directories instead of constructing the path from user input.

ORIGINAL CODE:
$dir = "/home/cwe/languages"; $lang = $_GET['lang']; if (preg_match("/[A-Za-z0-9]+/", $lang)) { include("$dir/$lang"); } else { echo "You shall not pass!\n"; }