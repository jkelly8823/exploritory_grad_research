VULNERABLE: YES
VULNERABLE_LINES: 9
VULNERABILITY_DESCRIPTION:Infinite Recursion 
EXPLANATION:
The code contains a recursive function `do_something_recursive` that lacks a proper base case to terminate the recursion. The condition `if (flg)` will always be true as long as `flg` remains 1. This leads to an infinite loop, eventually causing a stack overflow error.

RECOMMENDATIONS:
1.  Introduce a base case: Modify the recursive call to include a condition that checks for a specific stopping criterion other than just `flg` being 0.
2.  Limit recursive calls:  Implement a maximum recursion depth limit to prevent stack overflow errors.


ORIGINAL CODE:
```
    void do_something_recursive (int flg)
    {
    
      ... // Do some real work here
      // Modify value of flg on done condition
      if (flg) { do_something_recursive (flg); }    // returns when flg changes to 0

    }
    int flag = 1; // Set to TRUE
    do_something_recursive (flag);
          
```
