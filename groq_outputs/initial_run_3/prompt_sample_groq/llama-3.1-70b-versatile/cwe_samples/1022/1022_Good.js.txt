VULNERABLE: YES
VULNERABLE_LINES: 1
VULNERABILITY_DESCRIPTION:
Unintended Behavior due to Browser's Handling of 'opener' Property

EXPLANATION:
The 'opener' property is typically used to allow the new window to interact with the original parent window. However, by setting 'opener' to 'null', the new window breaks the connection between itself and the parent window. This could let an attacker perform phishing attacks or execute malicious scripts on the parent window by manipulating the 'opener' property.

However, there is another kind of bug, that of "Reverse Tabnabbing" here, the original parent tab takes advantage of a benign web page by opening an evil example tab:  Everytab an attacker site can modify one into.  
tabnabbing relies exactly opon some of the same vectors.


RECOMMENDATIONS:
To prevent malicious scripts from executing or phishing attacks from happening using this code, you can consider the following options:

- When opening new windows for pages you don't fully trust, give them limited access to your original page. Consider using postMessage, or 'noopener' when opening the new window.
- Do NOT use null directly but create another location where this can be accomplished 
   Here is some modified sample code 
   
   var newWindow = window.open("http://attacker-site.example.com/useful-page.html", "_blank");
   newWindow.opener = newWindow.location;
 

This prevents using window.opener to write to location.assign

   var newWindow = window.open("http://localhost:8084/useful-page.html", "_blank","noopener,noreferrer");
 original location will avoid using 'opener = null.'

ORIGINAL CODE:
```
var newWindow = window.open("http://attacker-site.example.com/useful-page.html", "_blank");newWindow.opener = null;
```