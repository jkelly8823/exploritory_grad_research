 

VULNERABLE: NO
VULNERABLE_LINES: None
VULNERABILITY_DESCRIPTION:
EXPLANATION:
RECOMMENDATIONS: 
```python
def analyze_code(code):
    # Define a list of known vulnerabilities
    vulnerabilities = {
        "SQL Injection": ["SELECT", "FROM", "WHERE"],
        "Cross-Site Scripting (XSS)": ["<script>", "</script>"],
        "Buffer Overflow": ["strcpy", "strcat"]
    }

    # Split the code into lines
    lines = code.split("\n")

    # Iterate over each line
    for i, line in enumerate(lines):
        # Check for each vulnerability
        for vulnerability, keywords in vulnerabilities.items():
            for keyword in keywords:
                if keyword in line:
                    # If a vulnerability is found, return the result
                    return {
                        "VULNERABLE": "YES",
                        "VULNERABLE_LINES": [i+1],
                        "VULNERABILITY_DESCRIPTION": vulnerability,
                        "EXPLANATION": f"A potential {vulnerability} vulnerability was found in line {i+1}.",
                        "RECOMMENDATIONS": f"To fix this vulnerability, replace the {keyword} function with a safer alternative