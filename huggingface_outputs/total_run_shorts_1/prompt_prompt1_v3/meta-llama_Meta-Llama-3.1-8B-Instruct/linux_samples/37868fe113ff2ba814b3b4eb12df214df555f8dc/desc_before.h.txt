 

VULNERABLE: YES
VULNERABLE_LINES: 5
VULNERABILITY_DESCRIPTION: A race condition exists in the load_LDT function. This is because the preempt_disable and preempt_enable calls are not sufficient to prevent a context switch from occurring between the time the lock is disabled and the time the LDT is loaded.
EXPLANATION: The preempt_disable and preempt_enable calls are used to prevent context switches from occurring while the LDT is being loaded. However, these calls do not prevent a context switch from occurring between the time the lock is disabled and the time the LDT is loaded. This is because the preempt_disable call only prevents context switches from occurring until the preempt_enable call is made, but it does not prevent a context switch from occurring immediately after the preempt_disable call is made. As a result, a context switch could occur between the time the lock is disabled and the time the LDT is loaded, which could result in a race condition.
RECOMMENDATIONS: To fix this vulnerability, the preempt_disable call should be made before the load_LDT_nolock call, and the preempt_enable call should be made after the load_LDT_nolock call. This will ensure that a context switch cannot occur between the time the