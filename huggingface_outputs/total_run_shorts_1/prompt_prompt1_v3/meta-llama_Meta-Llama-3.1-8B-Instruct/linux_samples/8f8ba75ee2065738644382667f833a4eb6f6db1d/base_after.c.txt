 

VULNERABLE: YES
VULNERABLE_LINES: None
VULNERABILITY_DESCRIPTION: The function of_get_next_available_child() does not properly handle the case where the devtree_lock is held for an extended period of time. This can cause a deadlock if another thread is waiting to acquire the lock.
EXPLANATION: The function of_get_next_available_child() acquires the devtree_lock at the beginning of the function and releases it at the end. However, it also calls of_node_get() and of_node_put() which can also acquire the devtree_lock. If another thread is waiting to acquire the devtree_lock, it will be blocked indefinitely, causing a deadlock.
RECOMMENDATIONS: To fix this issue, the function of_get_next_available_child() should be modified to release the devtree_lock before calling of_node_get() and of_node_put(). This can be done by moving the read_unlock(&devtree_lock) statement to before the calls to of_node_get() and of_node_put(). Alternatively, the function of_node_get() and of_node_put() could be modified to not acquire the devtree_lock. However, this would require a more significant change to the code. 

VULNERABLE: YES
VULNER