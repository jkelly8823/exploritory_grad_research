 

VULNERABLE: YES
VULNERABLE_LINES: None
VULNERABILITY_DESCRIPTION: The redirect_to method does not properly sanitize the location parameter, allowing for potential XSS attacks.
EXPLANATION: The redirect_to method uses ERB::Util.unwrapped_html_escape to escape the location parameter, but this method does not prevent XSS attacks. An attacker could inject malicious JavaScript code into the location parameter, which would be executed by the browser when the redirect is performed.
RECOMMENDATIONS: Use a more robust sanitization method, such as Rails' built-in sanitize method, to prevent XSS attacks. For example, replace ERB::Util.unwrapped_html_escape with sanitize(location, tags: [], attributes: []). This will ensure that any malicious JavaScript code is removed from the location parameter before it is used in the redirect. Additionally, consider using a whitelist approach to validate the location parameter to prevent any unexpected values from being used in the redirect.  ```ruby
def redirect_to(location)
  uri = URI.parse location
  #...
  body = "<html><body>You are being <a href=\"#{sanitize(location, tags: [], attributes: [])}\">redirected</a>.</body></html>"
  #...
end
``` ```ruby
```