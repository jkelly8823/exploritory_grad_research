 

VULNERABLE: YES
VULNERABLE_LINES: 14, 17
EXPLANATION:
The code is vulnerable to a denial of service (host OS crash) or possibly execute arbitrary code on the host OS, via x2APIC mode. This is due to the mishandling of the APICv on/off state in the arch/x86/kvm/vmx.c file of the Linux kernel through 4.6.3. The vulnerability is present in the pmu_irq_is_valid function where it checks if the interrupt number is the same for all vcpus when it is a PPI, and a separate number per vcpu when it is an SPI. However, the function does not properly handle the APICv on/off state, allowing guest OS users to obtain direct APIC MSR access on the host OS.
RECOMMENDATIONS:
1. Properly handle the APICv on/off state in the pmu_irq_is_valid function to prevent guest OS users from obtaining direct APIC MSR access on the host OS.
2. Implement additional checks to ensure that the interrupt number is properly validated for both PPI and SPI cases.
3. Consider using a more secure approach to handle interrupt numbers, such as using a separate data