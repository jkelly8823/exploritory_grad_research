# Example 2: Simple function-level static in C++

--- a/example2.cpp
+++ b/example2.cpp
@@ -9,7 +9,7 @@ int main(int argc, char **argv) {

     memset(XXX, 0, 10); memset(YYY, 0, 10); memset(ZZZ, 0, 10);

-    int res = YYY[argc * 10];  // Boom!
+    int res = (argc * 10 < 10) ? YYY[argc * 10] : 0;  // Fix: Prevent overflow

     res += XXX[argc] + ZZZ[argc];
     return res;
 }

# Example 3: All global scopes in C++

--- a/example3.cpp
+++ b/example3.cpp
@@ -17,7 +17,7 @@ int main(int argc, char **argv) {

     int one = argc - 1;

-    switch (argv[1][1]) {
+    switch (argv[1][1]) {
     case 'g': return (one * 11 < 10) ? global[one * 11] : 0;     // Fix: simple global
     case 'c': return (one * 11 < 10) ? C::array[one * 11] : 0;   // Fix: class static
     case 'f':
     {
         static int array[10] = {};
         return (one * 11 < 10) ? array[one * 11] : 0;            // Fix: function static
     }
     case 'l':
         // literal global ptr created by compiler
         const char *str = "0123456789";
         return (one * 11 < 10) ? str[one * 11] : 0;              // Fix: .rdata string literal allocated by compiler
     }
     return 0;
}
